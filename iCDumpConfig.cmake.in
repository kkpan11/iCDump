
# Process known components
set(iCDump_known_comps STATIC SHARED)
set(iCDump_comp_STATIC NO)
set(iCDump_comp_SHARED NO)
foreach(_comp ${iCDump_FIND_COMPONENTS})
  if(";${iCDump_known_comps};" MATCHES ";${_comp};")
    set(iCDump_comp_${_comp} YES)
  else()
    set(iCDump_NOT_FOUND_MESSAGE
      "iCDump does not recognize component `${_comp}`.")
    set(iCDump_FOUND FALSE)
    return()
  endif()
endforeach()

# Validate component selection makes sense
if(iCDump_comp_STATIC AND iCDump_comp_SHARED)
  set(iCDump_NOT_FOUND_MESSAGE
    "iCDump `STATIC` and `SHARED` components are mutually exclusive.")
  set(iCDump_FOUND FALSE)
  return()
endif()

# These files are generated by CMake and hold the LIEF library target(s).
set(iCDump_static_export "${CMAKE_CURRENT_LIST_DIR}/iCDumpExport-static.cmake")
set(iCDump_shared_export "${CMAKE_CURRENT_LIST_DIR}/iCDumpExport-shared.cmake")

# Helper macro to load the requested targets, where `lib_type` is `static` or
# `shared`
macro(iCDump_load_targets lib_type)
  if(NOT EXISTS "${iCDump_${lib_type}_export}")
    set(iCDump_NOT_FOUND_MESSAGE
      "iCDump `${lib_type}` libraries were requested but not found.")
    set(iCDump_FOUND FALSE)
    return()
  endif ()

  # Include the respective targets file
  include("${iCDump_${lib_type}_export}")
endmacro()

# Run the logic to choose static or shared libraries
# 1. Check components
if(iCDump_comp_STATIC)
  iCDump_load_targets("static")
elseif(iCDump_comp_SHARED)
  iCDump_load_targets("shared")
# 2. Check LIEF-only library selection
elseif(DEFINED iCDump_SHARED_LIBS AND iCDump_SHARED_LIBS)
  iCDump_load_targets("shared")
elseif(DEFINED iCDump_SHARED_LIBS AND NOT iCDump_SHARED_LIBS)
  iCDump_load_targets("static")
# 3. Check CMake build type and choose what's available
elseif(BUILD_SHARED_LIBS)
  if(EXISTS "${iCDump_shared_export}")
    iCDump_load_targets("shared")
  else()
    iCDump_load_targets("static")
  endif()
else()
  if(EXISTS "${iCDump_static_export}")
    iCDump_load_targets("static")
  else()
    iCDump_load_targets("shared")
  endif()
endif()

set(iCDump_LIBRARIES iCDump::iCDump)
get_target_property(iCDump_INCLUDE_DIRS iCDump::iCDump INTERFACE_INCLUDE_DIRECTORIES)
